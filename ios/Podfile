



require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'


platform :ios, '12.4'

  $RNFirebaseAsStaticFramework = true
  pod 'Firebase', :modular_headers => true
   pod 'FirebaseCoreInternal', :modular_headers => true
    pod 'GoogleUtilities', :modular_headers => true
pod 'RNIap', :path => '../node_modules/react-native-iap'
  #....add any library need headers

target 'PopFit' do
    pod 'FirebaseCore', :modular_headers => true
  config = use_native_modules!

  use_react_native!(:path => config["reactNativePath"])

  pod 'RNCAsyncStorage', :path => '../node_modules/@react-native-async-storage/async-storage'
 

  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'

  target 'PopFitTests' do
    inherit! :complete
    # Pods for testing
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  use_flipper!
#  post_install do |installer|
#    flipper_post_install(installer)
#  end
#end


#post_install do |installer|
#  installer.pods_project.targets.each do |target|
#    target.build_configurations.each do |config|
#      config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET'
#    end
#  end
#end

#post_install do |installer|
#    react_native_post_install(installer)
#    __apply_Xcode_12_5_M1_post_install_workaround(installer)
#  end
#end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
      target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end
    if target.name == "React-Core-AccessibilityResources"
     target.remove_from_project
    end
 end
 end
end
